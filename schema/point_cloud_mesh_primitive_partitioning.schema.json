{
    "$id": "point_cloud_mesh_primitive_partitioning.schema.json",
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "title": "OPF_mesh_primitive_partitioning",
    "version": "1.0",
    "description": "glTF extension storing the spatial partitioning data structure",
    "type": "object",
    "properties": {
        "nodeIndices": {
            "type": "integer",
            "minimum": 0,
            "description": "The index of the accessor to the nodes indices. The referenced accessor type **MUST** be `VEC4` and the component type **MUST** be `UNSIGNED INT`. The elements are the octree nodes integer coordinates (level, x, y, z) stored contiguously by level following a breadth-first-search order. The accessor count field corresponds to the number of nodes within the octree. Nodes a hereby referred to by their index within this sequence."
        },
        "boundingBox": {
            "type": "object",
            "properties": {
                "min": {
                    "$ref": "vector3d.schema.json"
                },
                "max": {
                    "$ref": "vector3d.schema.json"
                }
            },
            "description": "minimum and maximum 3D coordinates",
            "required": [
                "min",
                "max"
            ],
            "additionalProperties": false
        },
        "childrenIndexing": {
            "type": "integer",
            "minimum": 0,
            "description": "The index of the accessor to the nodes children indexing. The referred accessor type **MUST** be `VEC2` and the component type **MUST** be `UNSIGNED INT`. Together the pair of unsigned 32-bit integers form an unsigned 64-bit integers in the little-endian byte order. The accessor `count` property **MUST** equal the `count` property of the `nodeCoordinates` accessor plus 1. The indexing is defined such that the range `[childrenIndexing[i], childrenIndexing[i] + 1, ..., childrenIndexing[i+1] - 1]` corresponds to the i'th node children ids"
        },
        "nodeLevelIndexing": {
            "type": "array",
            "description": "The indexing of octree node levels. For a level `l`, the range `[nodeLevelIndexing[l], nodeLevelIndexing[l] + 1, ..., nodeLevelIndexing[l + 1] - 1]` corresponds to the indices of all nodes belonging to this level. The size of this array **MUST** match the number of levels plus one",
            "items": {
                "type": "integer"
            }
        },
        "perNodeChunkIndexRanges": {
            "type": "integer",
            "minimum": 0,
            "description": "The accessor index corresponding the spatial partitioning point ranges. The referred accessor type **MUST** be `VEC4`, the component type `UNSIGNED_INT`. The first pair of unsigned integers forms the range 64-bit unsigned integer starting index in little-endian order. The second pair forms the range 64-bit unsigned integer length. The `count` property must be a multiple of the `nodeCoordinates` property referred accessor `count`. The multiple is the number of chunks. The ranges are ordered such that, for a node `n` and a chunk `c`, the corresponding range is found at the position `n * chunkCount + c`"
        },
        "nodeAttributes": {
            "type": "object",
            "properties": {},
            "additionalProperties": {
                "type": "integer",
                "minimum": 0
            },
            "description": "The extra node attribute name and index of the accessor for an additional per-node property. The referred accessor `count` property **MUST** match the `count` property of the `nodeCoordinates` referenced accessor. If the component type is `UNSIGNED INT`, then the type **MUST** be either `VEC2` or `VEC4` in which case the integers are interpreted as 1 or 2 64-bit unsigned integers respectively."
        }
    },
    "required": [
        "nodeIndices",
        "boundingBox",
        "childrenIndexing",
        "nodeLevelIndexing",
        "perNodeChunkIndexRanges"
    ],
    "additionalProperties": false
}
